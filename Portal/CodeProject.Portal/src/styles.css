/* You can add global styles to this file, and also import other style files */
@import "~@angular/material/prebuilt-themes/indigo-pink.css";

body {
  margin: 0;
}

.successMessage {
  background: green;
  color: white;
}

.errorMessage {
  background: red;
  color: white;
}

.warningMessage {
  background: yellow;
  color: white;
}

.spacer {
  flex: 1 1 auto;
}

.icon {
  display: inline-block;
  height: 30px;
  margin: 0 auto;
  padding-right: 2px;
  text-align: center;
  vertical-align: middle;
}

.label {
  display: inline-block;
  line-height: 30px;
  margin: 0;
  width: 85%;
  margin-right: 5px;
}

a {
  text-decoration: none;
  color: white;
}

  a:hover,
  a:active {
    color: lightgray;
  }


  .example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }

  .example-fill-remaining-space {
    /* This fills the remaining space, by using flexbox. 
       Every toolbar row uses a flexbox row layout. */
    flex: 1 1 auto;
  }
  

